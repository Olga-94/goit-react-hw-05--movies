{"version":3,"file":"static/js/reviews-view.d7f4acc9.chunk.js","mappings":"iSAEaA,EAAcC,EAAAA,GAAAA,GAAH,0EAKXC,EAAcD,EAAAA,GAAAA,GAAH,oNAUXE,EAAaF,EAAAA,GAAAA,EAAH,8OAaVG,EAAgBH,EAAAA,GAAAA,EAAH,wE,SC0B1B,EA5CkB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QAcnB,OACE,iCAKE,SAACL,EAAD,UACGK,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACP,EAAD,YACE,UAACC,EAAD,sBAAqBK,MACrB,SAACJ,EAAD,UAAgBK,MAFAF,SAMtB,SAAC,EAAAG,SAAD,WACE,SAAC,KAAD,UCnCO,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE0BC,EAAAA,EAAAA,IAAaL,GAFvC,WAEUP,EAFV,QAIiBa,OAJjB,sBAKY,IAAIC,MAAM,oBALtB,OAQIJ,EAAWV,GARf,gDAUIe,EAAAA,GAAAA,MAAY,oBACZC,QAAQC,IAAR,MAXJ,0BAawBL,EAAAA,EAAAA,IAAaL,GAbrC,QAaQP,EAbR,OAeEU,EAAWV,GACXkB,OAAOC,SAAS,CAAEC,IAAK,IAAKC,SAAU,WAhBxC,yDADc,yBAAC,WAAD,wBAmBdC,KACC,CAACf,KAEG,8BAAGP,IAAW,SAAC,EAAD,CAASA,QAASA,Q,kOC9BnCuB,EAAU,mCAGT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,kFACCC,EADD,sCACsCH,EADtC,iBACsDE,GAAQ,GAD9D,SAEkBE,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAaL,GAA9C,kFACCC,EADD,gCACgCH,EADhC,kBACiDO,EADjD,iBACqEL,EADrE,gDAEkBE,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCxB,GAArC,kFACCmB,EADD,iBACiBnB,EADjB,oBACoCgB,GADpC,SAEkBI,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCzB,GAApC,kFACCmB,EADD,iBACiBnB,EADjB,4BAC4CgB,GAD5C,SAEkBI,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKK,MAHP,kEAMA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,kFACCmB,EADD,iBACiBnB,EADjB,4BAC4CgB,EAD5C,4BAEkBI,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKM,SAHP,kEAMA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCT,EADD,oCACoCH,GADpC,SAEkBI,IAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAIEA,EAAKQ,QAJP,kEAhCPT,IAAAA,SAAAA,QAAyB","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","Views/ReviewsView.jsx","services/apiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;`;\n\nexport const ReviewsItem = styled.li`\n  background-color: #fff;\n  margin-bottom: 20px;\n  margin-right: 5px;\n  padding: 10px;\n  border-bottom: 2px solid grey;\n  border-radius: 4px;\n  box-shadow: 4px 4px 4px 3px #b9bfc4;\n`;\n\nexport const AuthorName = styled.p`\n  font-weight: bold;\n  text-decoration: underline;\n  margin-right: 10px;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.67;\n  text-align: center;\n  margin-bottom: 15px;\n  \n`;\n\nexport const AuthorContent = styled.p`\n  margin-bottom: 30px;\n  text-align: justify;\n`;\n","import { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\n// import { fetchReviews } from '../../services/apiService';\n// import { Container } from '../App.styled';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  AuthorName,\n  AuthorContent,\n} from './Reviews.styled';\n\n  const Reviews = ({ reviews }) => {\n  //   const [reviews, setReviews] = useState([]);\n  // const { detailsId } = useParams();\n  // useEffect(() => {\n  //   const fetchMoviesReviews = async () => {\n  //     try {\n  //       const response = await fetchReviews(detailsId);\n  //       setReviews(response.data.results);\n  //     } catch (error) {\n  //       setReviews([]);\n  //     }\n  //   };\n  //   fetchMoviesReviews();\n  // }, [detailsId]);\n  return (\n    <>\n    {/* {reviews.length ?(\n\n\n    )} */}\n      <ReviewsList>\n        {reviews.map(({ id, author, content }) => (\n          <ReviewsItem key={id}>\n            <AuthorName>Author: {author}</AuthorName>\n            <AuthorContent>{content}</AuthorContent>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }),\n  ),\n};\nexport default Reviews;","import React, { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../services/apiService';\nimport Reviews from '../components/Reviews/Reviews';\n\nexport default function ReviewsView() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const reviews = await fetchReviews(movieId);\n\n        if (!reviews.length) {\n          throw new Error('No reviews found');\n        }\n\n        setReviews(reviews);\n      } catch (error) {\n        toast.error('No reviews found');\n        console.log(error);\n      }\n      const reviews = await fetchReviews(movieId);\n\n      setReviews(reviews);\n      window.scrollTo({ top: 650, behavior: 'smooth' });\n    }\n    getReviews();\n  }, [movieId]);\n\n  return <>{reviews && <Reviews reviews={reviews} />}</>;\n}\n","import axios from 'axios';\n\nconst API_KEY = 'e46b87edbe0418b9678f5579382a8e13';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrandingMovies(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page || 1}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchSearchMovies(seacrhQuery, page) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${seacrhQuery}&page=${page}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchMovieInformation(movieId) {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchCastInformation(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function fetchGenresList() {\n  const url = `/genre/movie/list?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.genres;\n}\n"],"names":["ReviewsList","styled","ReviewsItem","AuthorName","AuthorContent","reviews","map","id","author","content","Suspense","ReviewsView","movieId","useParams","useState","setReviews","useEffect","fetchReviews","length","Error","toast","console","log","window","scrollTo","top","behavior","getReviews","API_KEY","fetchTrandingMovies","page","url","axios","data","fetchSearchMovies","seacrhQuery","fetchMovieInformation","fetchCastInformation","cast","results","fetchGenresList","genres"],"sourceRoot":""}