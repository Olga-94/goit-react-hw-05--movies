{"version":3,"file":"static/js/movie-details-page.8cee50f8.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","Views/MovieDetailsPage.jsx","services/apiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  max-width: 1170px;\n  padding: 12px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 25px;\n  box-shadow: 4px 4px 4px 0px #b9bfc4;\n  background-color: #bdc0c7;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 320px;\n  height: 100%;\n  object-fit: cover;\n  margin-right: 45px;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n`;\n\nexport const MovieTitle = styled.h1`\n  text-align: center;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  line-height: 1.16;\n  text-transform: uppercase;\n`;\n\nexport const MovieSubTitle = styled.h2`\n  font-weight: 600;\n  color: #2a363b;\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const MovieParams = styled.p`\n  margin-bottom: 15px;\n  color: #464d5e;\n`;\n","import { Suspense} from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from '../Navigation/Navigation.styled';\nimport {\n  Image,\n  MovieInfoWrapper,\n  MovieInfoContainer,\n  MovieTitle,\n  MovieSubTitle,\n  MovieParams,\n} from './MovieDetails.styled';\nimport defaultImage from '../Images/defaultMovie.png';\nimport { Box } from 'components/Box';\n\nexport default function MovieInfo({\n  poster,\n  title,\n  overview,\n  releaseDate,\n  popularity,\n  vote,\n  genres,\n}) {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <Box>\n      <MovieInfoContainer>\n        <Image\n          src={\n            poster ? `https://image.tmdb.org/t/p/original${poster}` : defaultImage\n          }\n          alt={title}\n        />\n        <MovieInfoWrapper>\n          <MovieTitle>{`${title} (${releaseDate.substring(0, 4)})`}</MovieTitle>\n          <MovieSubTitle>User score:</MovieSubTitle>\n          <MovieParams>{Math.round(vote * 10)}%</MovieParams>\n          <MovieSubTitle>Popularity</MovieSubTitle>\n          <MovieParams>{popularity}</MovieParams>\n          <MovieSubTitle>Overview</MovieSubTitle>\n          <MovieParams>{overview}</MovieParams>\n          <MovieSubTitle>Genres</MovieSubTitle>\n          <MovieParams>{genres}</MovieParams>\n\n          <Link to=\"cast\"  state={{from: backLinkHref}}>Cast</Link>\n          <Link to=\"reviews\"  state={{from: backLinkHref}}>Reviews</Link> \n        </MovieInfoWrapper>\n      </MovieInfoContainer>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n    </Box>\n  );\n}\n\nMovieInfo.propTypes = {\n  title: PropTypes.string,\n  poster: PropTypes.string,\n  overview: PropTypes.string,\n  releaseDate: PropTypes.string,\n  popularity: PropTypes.number,\n  vote: PropTypes.number,\n  genres: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fetchMovieInformation } from '../services/apiService';\nimport { Button } from '../components/App.styled';\nimport MovieInfo from '../components/MovieDetails/MovieDetails';\n\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  // const backUrlPath = useRef(location.state?.from ?? '/');\n  // const routerState = useRef(location.state?.from).current;\n\n  useEffect(() => {\n    async function getMovieInformation() {\n      try {\n        const movie = await fetchMovieInformation(movieId);\n\n        if (!movie) {\n          throw new Error('Page not found');\n        }\n\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n        toast.error('Page not found', { duration: 3000 });\n      }\n    }\n    getMovieInformation();\n  }, [ movieId]);\n \n  const goBack = () => {\n    // return navigate(backUrlPath.current, { replace: true });\n    // return navigate(-1);\n    return navigate(location?.state?.from || '/');\n    // navigate(backUrlPath.current, { replace: true });\n    // navigate(routerState ?? '/');\n  }; \n\n  return (\n    <>\n      <Button type=\"button\" onClick={goBack}>\n        Go back\n      </Button>\n\n      {movie && (\n        <MovieInfo\n          title={movie.title}\n          poster={movie.poster_path}\n          overview={movie.overview}\n          releaseDate={movie.release_date || 'ãƒ„'}\n          popularity={movie.popularity}\n          vote={movie.vote_average}\n          genres={movie.genres.map(genre => genre.name).join(', ') || '\\u2015'}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst API_KEY = 'e46b87edbe0418b9678f5579382a8e13';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrandingMovies(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page || 1}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchSearchMovies(seacrhQuery, page) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${seacrhQuery}&page=${page}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchMovieInformation(movieId) {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchCastInformation(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function fetchGenresList() {\n  const url = `/genre/movie/list?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.genres;\n}\n"],"names":["MovieInfoContainer","styled","Image","MovieInfoWrapper","MovieTitle","MovieSubTitle","MovieParams","MovieInfo","poster","title","overview","releaseDate","popularity","vote","genres","backLinkHref","useLocation","state","from","Box","src","defaultImage","alt","substring","Math","round","to","Suspense","location","navigate","useNavigate","movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieInformation","Error","console","log","toast","duration","getMovieInformation","type","onClick","poster_path","release_date","vote_average","map","genre","name","join","API_KEY","fetchTrandingMovies","page","url","axios","data","fetchSearchMovies","seacrhQuery","fetchCastInformation","cast","fetchReviews","results","fetchGenresList"],"sourceRoot":""}