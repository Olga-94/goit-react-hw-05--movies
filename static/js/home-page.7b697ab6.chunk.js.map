{"version":3,"file":"static/js/home-page.7b697ab6.chunk.js","mappings":"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","sources":["Views/HomePage.jsx","components/MovieCardList/MovieCardList.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieCardList/MovieCardList.jsx","services/apiService.js"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\n// import { useHistory } from 'react-router-dom';\n// import toast from 'react-hot-toast';\nimport { fetchTrandingMovies } from '../services/apiService';\nimport MovieCardList from '../components/MovieCardList/MovieCardList';\nimport styled from 'styled-components';\n// import Pagination from '../components/Pagination/Pagination';\n\n const HomePage = () => {\n  // const history = useHistory();\n  const [movies, setMovies] = useState([]);\n  // const [totalPages, setTotalPages] = useState(null);\n  // const currentPage =\n  //   Number(new URLSearchParams(window.location.search).get('page')) || 1;\n  \n    useEffect(() => {\n      // if (!isExact) {\n      //   history.push('/');\n      //   toast.error('Page not found', { duration: 3000 });\n      // }\n    async function getFetchMovies() {\n      try {\n        const data = await fetchTrandingMovies();\n        const { results } = data;\n\n        // setTotalPages(total_pages);\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFetchMovies();\n  }, []);\n\n  return (\n    <>\n     <Title>Trending Today</Title>\n      {movies && <MovieCardList movies={movies} />}\n      {/* <MovieCardList movies={movies} /> */}\n      {/* <Pagination totalPages={totalPages} onClick={handlePageClick} /> */}\n    </>\n  );\n}\n\nexport default HomePage;\n\nconst Title = styled.h2`\n  margin: ${p => p.theme.space[4]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accent};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Card = styled.li`\n  border-radius: 2px;\n  /* display: flex; */\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    /* display: grid;\n    grid-template-columns: minmax(10px, 1fr) 3fr;\n    grid-gap: 25px; */\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1) translateY(-5px);\n    box-shadow: 0px 5px 14px 2px rgba(0, 0, 0, 0.55);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  object-fit: contain;\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    border-radius: 2px;\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  font-style: normal;\n  font-weight: 700;\n  color: #2a363b;\n  font-size: 14px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const MovieCardInfo = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  color: #2196f3;\n  margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n/* flex-direction: column; */\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AiFillStar } from 'react-icons/ai';\nimport {\n  Card,\n  Image,\n  CardTitle,\n  MovieLink,\n  CardInfo,\n  MovieCardInfo,\n  Container,\n} from './MovieCard.styled';\nimport defaultImage from '../Images/defaultMovie.png';\n// import { Box } from 'components/Box';\nfunction MovieCard({ id, poster, title, date, rating, genres }) {\n  const location = useLocation();\n\n  return (\n    <Container >\n    <Card>\n      <MovieLink\n        to={{\n          pathname: `/movies/${id}`,\n          state: { from: location },\n        }}\n      >\n        <Image\n          src={\n            poster\n              ? `https://image.tmdb.org/t/p/original${poster}`\n              : defaultImage\n          }\n          alt={title}\n        />\n      </MovieLink>\n      <CardTitle>{title}</CardTitle>\n      <CardInfo>\n        <MovieCardInfo>{`${genres} | ${date.substring(0, 4)}`}</MovieCardInfo>\n        <MovieCardInfo>\n          <AiFillStar /> {rating}\n        </MovieCardInfo>\n      </CardInfo>\n    </Card>\n    </Container>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  rating: PropTypes.number,\n  genres: PropTypes.array,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchGenresList } from '../../services/apiService';\nimport { List } from './MovieCardList.styled';\nimport MovieCard from '../MovieCard/MovieCard';\n\nfunction MovieCardList({ movies }) {\n  const [genres, setGenres] = useState(null);\n\n  useEffect(() => {\n    async function getFetchGenresList() {\n      try {\n        const genres = await fetchGenresList();\n        setGenres(genres);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFetchGenresList();\n  }, []);\n\n  return (\n    <List>\n      {genres &&\n        movies.map(\n          ({\n            id,\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            genre_ids,\n          }) => (\n            <MovieCard\n              key={id}\n              id={id}\n              poster={poster_path}\n              title={title}\n              date={release_date || '(ãƒ„)'}\n              rating={vote_average}\n              genres={genres\n                .filter(genre => genre_ids.includes(genre.id))\n                .slice(0, 3)\n                .map(genre => genre.name)}\n            />\n          ),\n        )}\n    </List>\n  );\n}\n\nMovieCardList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default MovieCardList;\n","import axios from 'axios';\n\nconst API_KEY = 'e46b87edbe0418b9678f5579382a8e13';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n  const url = `/trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchSearchMovies(seacrhQuery) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${seacrhQuery}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchMovieInformation(movieId) {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchCastInformation(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function fetchGenresList() {\n  const url = `/genre/movie/list?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.genres;\n}\n"],"names":["useState","movies","setMovies","useEffect","fetchTrandingMovies","data","results","console","log","getFetchMovies","Title","styled","p","theme","space","colors","accent","fontSizes","m","fontWeights","bold","List","MovieLink","Link","Card","Image","CardTitle","CardInfo","MovieCardInfo","Container","id","poster","title","date","rating","genres","location","useLocation","to","pathname","state","from","src","defaultImage","alt","substring","setGenres","fetchGenresList","getFetchGenresList","map","poster_path","release_date","vote_average","genre_ids","filter","genre","includes","slice","name","API_KEY","url","axios","fetchSearchMovies","seacrhQuery","fetchMovieInformation","movieId","fetchCastInformation","cast","fetchReviews","api_key"],"sourceRoot":""}