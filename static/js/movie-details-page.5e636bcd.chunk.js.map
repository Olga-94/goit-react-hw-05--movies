{"version":3,"file":"static/js/movie-details-page.5e636bcd.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","Views/MovieDetailsPage.jsx","services/apiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  max-width: 1170px;\n  padding: 12px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 25px;\n  box-shadow: 4px 4px 4px 0px #b9bfc4;\n  background-color: #bdc0c7;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 320px;\n  height: auto;\n  object-fit: cover;\n  margin-right: 45px;\n`;\n\nexport const MovieInfoWrapper = styled.div``;\n\nexport const MovieTitle = styled.h1`\n  text-align: center;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  line-height: 1.16;\n  text-transform: uppercase;\n  // text-decoration: underline;\n`;\n\nexport const MovieSubTitle = styled.h2`\n  font-weight: 600;\n  color: #2a363b;\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const MovieParams = styled.p`\n  margin-bottom: 15px;\n  color: #464d5e;\n`;\n","import { Suspense} from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from '../Navigation/Navigation.styled';\nimport {\n  Image,\n  MovieInfoWrapper,\n  MovieInfoContainer,\n  MovieTitle,\n  MovieSubTitle,\n  MovieParams,\n} from './MovieDetails.styled';\nimport defaultImage from '../Images/defaultMovie.png';\n\nexport default function MovieInfo({\n  poster,\n  title,\n  overview,\n  releaseDate,\n  popularity,\n  vote,\n  genres,\n}) {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <MovieInfoContainer>\n      <Image\n        src={\n          poster ? `https://image.tmdb.org/t/p/original${poster}` : defaultImage\n        }\n        alt={title}\n      />\n      <MovieInfoWrapper>\n        <MovieTitle>{`${title} (${releaseDate.substring(0, 4)})`}</MovieTitle>\n        <MovieSubTitle>Vote</MovieSubTitle>\n        <MovieParams>{vote}</MovieParams>\n        <MovieSubTitle>Popularity</MovieSubTitle>\n        <MovieParams>{popularity}</MovieParams>\n        <MovieSubTitle>Overview</MovieSubTitle>\n        <MovieParams>{overview}</MovieParams>\n        <MovieSubTitle>Genres</MovieSubTitle>\n        <MovieParams>{genres}</MovieParams>\n\n\n        <Link to=\"cast\"  state={{from: backLinkHref}}>Cast</Link>\n        <Link to=\"rewiews\"  state={{from: backLinkHref}}>Reviews</Link> \n      </MovieInfoWrapper>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </MovieInfoContainer>\n  );\n}\n\nMovieInfo.propTypes = {\n  title: PropTypes.string,\n  poster: PropTypes.string,\n  overview: PropTypes.string,\n  releaseDate: PropTypes.string,\n  popularity: PropTypes.number,\n  vote: PropTypes.number,\n  genres: PropTypes.string,\n};\n","import { useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, useNavigate, Route, Routes } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fetchMovieInformation } from '../services/apiService';\nimport { Button } from '../components/App.styled';\nimport MovieInfo from '../components/MovieDetails/MovieDetails';\nimport Spinner from '../components/Spinner/Spinner';\n\nconst CastView = lazy(() =>\n  import('./CastViews' /* webpackChunkName: \"cast-view\" */),\n);\nconst ReviewsView = lazy(() =>\n  import('./ReviewsView' /* webpackChunkName: \"reviews-view\" */),\n);\n\nconst MovieDetailsPage = () => {\n  // const location = useLocation();\n  const navigate = useNavigate();\n  // const goBack = location.state?.from ?? '/';\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    async function getMovieInformation() {\n      try {\n        const movie = await fetchMovieInformation(movieId);\n\n        if (!movie) {\n          throw new Error('Page not found');\n        }\n\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n        toast.error('Page not found', { duration: 3000 });\n      }\n    }\n    getMovieInformation();\n  }, [ movieId]);\n \n  const goBack = () => {\n    // return navigate(location?.state?.from);\n    return navigate(-1);\n  }; \n\n  return (\n    <>\n      <Button type=\"button\" onClick={goBack}>\n        Go back\n      </Button>\n\n      {movie && (\n        <MovieInfo\n          title={movie.title}\n          poster={movie.poster_path}\n          overview={movie.overview}\n          releaseDate={movie.release_date || 'ãƒ„'}\n          popularity={movie.popularity}\n          vote={movie.vote_average}\n          genres={movie.genres.map(genre => genre.name).join(', ') || '\\u2015'}\n        />\n      )}\n\n      <Suspense fallback={<Spinner />}>\n      <Routes>\n        <Route exact path=\"/cast\" element={<CastView />} />\n        <Route exact path=\"/reviews\" element={<ReviewsView />} />\n      </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e46b87edbe0418b9678f5579382a8e13';\naxios.defaults.params = { api_key: API_KEY };\n\nexport async function fetchTrandingMovies() {\n  const url = `/trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchSearchMovies(seacrhQuery) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${seacrhQuery}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchMovieInformation(movieId) {\n  const url = `/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchCastInformation(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function fetchGenresList() {\n  const url = `/genre/movie/list?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.genres;\n}\n"],"names":["MovieInfoContainer","styled","Image","MovieInfoWrapper","MovieTitle","MovieSubTitle","MovieParams","MovieInfo","poster","title","overview","releaseDate","popularity","vote","genres","backLinkHref","useLocation","state","from","src","defaultImage","alt","substring","to","Suspense","CastView","lazy","ReviewsView","navigate","useNavigate","movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieInformation","Error","console","log","toast","duration","getMovieInformation","type","onClick","poster_path","release_date","vote_average","map","genre","name","join","fallback","Spinner","exact","path","element","axios","API_KEY","fetchTrandingMovies","url","data","fetchSearchMovies","seacrhQuery","fetchCastInformation","cast","fetchReviews","results","fetchGenresList","api_key"],"sourceRoot":""}