{"version":3,"file":"static/js/movies-page.9fbf54dd.chunk.js","mappings":"yTAEaA,EAAaC,EAAAA,GAAAA,KAAH,iOAYVC,EAAmBD,EAAAA,GAAAA,OAAH,iaAkBhBE,EAAwBF,EAAAA,GAAAA,KAAH,6MAYrBG,EAAkBH,EAAAA,GAAAA,MAAH,2P,SChCfI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBMC,EAAa,WACjBD,EAAe,KAGjB,OACE,iCACA,SAACE,EAAA,EAAD,WACA,UAACX,EAAD,CAAYM,SAnBO,SAAAM,GACnBA,EAAEC,iBAEyB,KAAvBL,EAAYM,QAKhBR,EAASE,GACTE,KALEK,EAAAA,GAAAA,MAAY,+BAed,WACE,SAACb,EAAD,CAAkBc,KAAK,SAAvB,UACE,SAACb,EAAD,wBAEF,SAACC,EAAD,CACEY,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,cACLC,MAAOb,EACPc,SAlC0B,SAAAV,GAC9BH,EAAeG,EAAEW,OAAOF,MAAMG,wBAqC9B,SAAC,EAAAC,SAAD,WACA,SAAC,KAAD,U,8BC7CW,SAASC,IAEtB,OAA4BnB,EAAAA,EAAAA,YAA5B,eAAOoB,EAAP,KAAeC,EAAf,KACA,GAAoCrB,EAAAA,EAAAA,UAAS,MAA7C,eAAOsB,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACX1B,EAAe,IAAI2B,gBAAgBF,EAASG,QAAQC,IAAI,SACxDC,EAAcC,OAAO,IAAIJ,gBAAgBF,EAASG,QAAQC,IAAI,UAAY,GAEhFG,EAAAA,EAAAA,YAAU,WAAM,wCAKd,kHAEuBC,EAAAA,EAAAA,IAAkBjC,EAAa8B,GAFtD,OAEUI,EAFV,OAGIC,QAAQC,IAAI,OAAQF,GACZG,EAAyBH,EAAzBG,QAASC,EAAgBJ,EAAhBI,YAEZD,EAAQE,SAEXC,EAAAA,EAAAA,WAGFpB,EAAUiB,GACVf,EAAcgB,GAZlB,kDAcIH,QAAQC,IAAR,MACA7B,EAAAA,GAAAA,MAAY,mBAAoB,CAAEkC,SAAU,MAfhD,2DALc,sBACTzC,KADS,mCAuBd0C,GACAC,OAAOC,SAAS,CAAEC,IAAK,IAAKC,SAAU,cACrC,CAAC9C,EAAa8B,IAuBjB,OACE,iCACE,SAACjC,EAAD,CAAWC,SAvBU,SAAAiD,GAEjB/C,IAAgB+C,IAIpB3B,EAAU,IAEVG,GAAS,kBACJE,GADG,IAENG,OAAO,SAAD,OAAWmB,EAAX,kBAcP5B,IACC,iCACE,SAAC6B,EAAA,EAAD,CAAe7B,OAAQA,KACvB,SAAC8B,EAAA,EAAD,CAAYC,UAAW7B,EAAY8B,QAbnB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB7B,GAAS,kBACJE,GADG,IAENG,OAAO,SAAD,OAAW5B,EAAX,iBAA+BoD,EAAW,iB,iDCxDtD,UAJA,WACE,OAAO,mD,sJCDIC,EAAO5D,EAAAA,GAAAA,GAAH,iJ,8BCCJ6D,GAAY7D,EAAAA,EAAAA,IAAO8D,EAAAA,GAAP9D,CAAH,kDAIT+D,EAAO/D,EAAAA,GAAAA,GAAH,kcAgBJgE,EAAQhE,EAAAA,GAAAA,IAAH,yLAaLiE,EAAYjE,EAAAA,GAAAA,GAAH,wLAUTkE,EAAWlE,EAAAA,GAAAA,IAAH,4EAKRmE,EAAgBnE,EAAAA,GAAAA,EAAH,mIAQboE,EAAYpE,EAAAA,GAAAA,IAAH,uE,mBCFtB,MA1CA,YAAiE,IAA5CqE,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC9C1C,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACmC,EAAD,WACA,UAACL,EAAD,YACE,SAACF,EAAD,CACEc,GAAI,CACFC,SAAS,WAAD,OAAaP,GACrBQ,MAAO,CAAEC,KAAM9C,IAHnB,UAME,SAACgC,EAAD,CACEe,IACET,EAAM,6CACoCA,GACtCU,EAENC,IAAKV,OAGT,SAACN,EAAD,UAAYM,KACZ,UAACL,EAAD,YACE,SAACC,EAAD,oBAAmBO,EAAnB,cAA+BF,EAAKU,UAAU,EAAG,OACjD,UAACf,EAAD,YACE,SAAC,MAAD,IADF,IACkBM,cCoB1B,MArDA,YAAoC,IAAX/C,EAAU,EAAVA,OACvB,GAA4BpB,EAAAA,EAAAA,UAAS,MAArC,eAAOoE,EAAP,KAAeS,EAAf,KAcA,OAZA5C,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyB6C,EAAAA,EAAAA,MAFzB,OAEUV,EAFV,OAGIS,EAAUT,GAHd,gDAKIhC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASd0C,KACC,KAGD,SAACzB,EAAD,UACGc,GACChD,EAAO4D,KACL,gBACEjB,EADF,EACEA,GACAkB,EAFF,EAEEA,YACAhB,EAHF,EAGEA,MACAiB,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,UANF,OAQE,SAAC,EAAD,CAEErB,GAAIA,EACJC,OAAQiB,EACRhB,MAAOA,EACPC,KAAMgB,GAAgB,WACtBf,OAAQgB,EACRf,OAAQA,EACLiB,QAAO,SAAAC,GAAK,OAAIF,EAAUG,SAASD,EAAMvB,OACzCyB,MAAM,EAAG,GACTR,KAAI,SAAAM,GAAK,OAAIA,EAAMzE,SATjBkD,U,yGCjCN0B,E,QAA0B/F,GAAAA,IAAH,k/C,SCIrB,SAASwD,EAAT,GAA6C,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAC9C,OACE,SAACqC,EAAD,WACE,SAAC,IAAD,CACEtC,UAAWA,EACXuC,aAActC,EACduC,qBAAsB,EACtBC,mBAAoB,EACpBC,mBAAoB,YACpBC,cAAe,OACfC,gBAAiB,aACjBC,kBAAmB,OACnBC,kBAAmB,WACnBC,sBAAuB,eACvBC,eAAe,SAAC,MAAD,IACfC,cAAe,OACfC,kBAAmB,WACnBC,WAAW,SAAC,MAAD,IACXC,eAAgB,WAChBC,WAAY,MACZC,mBAAoB,kB,kOCxBtBC,EAAU,mCAGT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,kFACCC,EADD,sCACsCH,EADtC,iBACsDE,GAAQ,GAD9D,SAEkBE,IAAAA,IAAUD,GAF5B,uBAEG1E,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeD,EAAtB,iDAAO,OAAP,oBAAO,WAAiC6E,EAAaH,GAA9C,kFACCC,EADD,gCACgCH,EADhC,kBACiDK,EADjD,iBACqEH,EADrE,gDAEkBE,IAAAA,IAAUD,GAF5B,uBAEG1E,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAe6E,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,kFACCJ,EADD,iBACiBI,EADjB,oBACoCP,GADpC,SAEkBI,IAAAA,IAAUD,GAF5B,uBAEG1E,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAe+E,EAAtB,+CAAO,OAAP,oBAAO,WAAoCD,GAApC,kFACCJ,EADD,iBACiBI,EADjB,4BAC4CP,GAD5C,SAEkBI,IAAAA,IAAUD,GAF5B,uBAEG1E,EAFH,EAEGA,KAFH,kBAGEA,EAAKgF,MAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACCJ,EADD,iBACiBI,EADjB,4BAC4CP,EAD5C,4BAEkBI,IAAAA,IAAUD,GAF5B,uBAEG1E,EAFH,EAEGA,KAFH,kBAGEA,EAAKG,SAHP,kEAMA,SAAewC,IAAtB,4CAAO,OAAP,oBAAO,+FACC+B,EADD,oCACoCH,GADpC,SAEkBI,IAAAA,IAAUD,GAF5B,uBAEG1E,EAFH,EAEGA,KAFH,kBAIEA,EAAKiC,QAJP,kEAhCP0C,IAAAA,SAAAA,QAAyB,gC","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","Views/MoviesPage.jsx","Views/NotFoundPage.jsx","components/MovieCardList/MovieCardList.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieCardList/MovieCardList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","services/apiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  // background-color: #faf5f5;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box } from 'components/Box';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQueryChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error('The search field is empty!');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    resetState();\n  };\n\n  const resetState = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n    <Box>\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormButton type=\"submit\">\n        <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n      </SearchFormButton>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name=\"searchQuery\"\n        value={searchQuery}\n        onChange={handleSearchQueryChange}\n      />\n    </SearchForm>\n    </Box>\n    <Suspense>\n    <Outlet />\n  </Suspense>\n  </>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { fetchSearchMovies } from '../services/apiService';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\nimport MovieCardList from '../components/MovieCardList/MovieCardList';\nimport Pagination from '../components/Pagination/Pagination';\nimport NotFoundPage from './NotFoundPage';\n\nexport default function MoviesPage() {\n  // const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState();\n  const [totalPages, setTotalPages] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchQuery =  new URLSearchParams(location.search).get('query');\n  const currentPage = Number(new URLSearchParams(location.search).get('page')) || 1;\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function getFetchMovies() {\n      try {\n        const data = await fetchSearchMovies(searchQuery, currentPage);\n        console.log('data', data);\n        const { results, total_pages } = data;\n\n        if (!results.length) {\n          // throw new Error('No results found');\n          NotFoundPage();\n        }\n\n        setMovies(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        console.log(error);\n        toast.error('No results found', { duration: 3000 });\n      }\n    }\n    getFetchMovies();\n    window.scrollTo({ top: 240, behavior: 'smooth' });\n  }, [searchQuery, currentPage]);\n\n  const handleFormSubmit = query => {\n\n      if (searchQuery === query) {\n        return;\n      }\n  \n      setMovies([]);\n  \n      navigate({\n        ...location,\n        search: `query=${query}&page=1`,\n      });\n    }\n\n  const handlePageClick = ({ selected }) => {\n    navigate({\n      ...location,\n      search: `query=${searchQuery}&page=${selected + 1}`,\n    });\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit}></SearchBar>\n      {movies && (\n        <>\n          <MovieCardList movies={movies} />\n          <Pagination pageCount={totalPages} onClick={handlePageClick} />\n        </>\n      )}\n    </>\n  );\n      }\n","import React from 'react';\n\nfunction NotFoundPage() {\n  return <h1>404 - page not found</h1>;\n}\n\nexport default NotFoundPage;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Card = styled.li`\n  border-radius: 2px;\n  /* display: flex; */\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    /* display: grid;\n    grid-template-columns: minmax(10px, 1fr) 3fr;\n    grid-gap: 25px; */\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1) translateY(-5px);\n    box-shadow: 0px 5px 14px 2px rgba(0, 0, 0, 0.55);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  object-fit: contain;\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    border-radius: 2px;\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  font-style: normal;\n  font-weight: 700;\n  color: #2a363b;\n  font-size: 14px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const MovieCardInfo = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  color: #2196f3;\n  margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n/* flex-direction: column; */\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AiFillStar } from 'react-icons/ai';\nimport {\n  Card,\n  Image,\n  CardTitle,\n  MovieLink,\n  CardInfo,\n  MovieCardInfo,\n  Container,\n} from './MovieCard.styled';\nimport defaultImage from '../Images/defaultMovie.png';\n// import { Box } from 'components/Box';\nfunction MovieCard({ id, poster, title, date, rating, genres }) {\n  const location = useLocation();\n\n  return (\n    <Container >\n    <Card>\n      <MovieLink\n        to={{\n          pathname: `/movies/${id}`,\n          state: { from: location },\n        }}\n      >\n        <Image\n          src={\n            poster\n              ? `https://image.tmdb.org/t/p/original${poster}`\n              : defaultImage\n          }\n          alt={title}\n        />\n      </MovieLink>\n      <CardTitle>{title}</CardTitle>\n      <CardInfo>\n        <MovieCardInfo>{`${genres} | ${date.substring(0, 4)}`}</MovieCardInfo>\n        <MovieCardInfo>\n          <AiFillStar /> {rating}\n        </MovieCardInfo>\n      </CardInfo>\n    </Card>\n    </Container>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  rating: PropTypes.number,\n  genres: PropTypes.array,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchGenresList } from '../../services/apiService';\nimport { List } from './MovieCardList.styled';\nimport MovieCard from '../MovieCard/MovieCard';\n\nfunction MovieCardList({ movies }) {\n  const [genres, setGenres] = useState(null);\n\n  useEffect(() => {\n    async function getFetchGenresList() {\n      try {\n        const genres = await fetchGenresList();\n        setGenres(genres);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFetchGenresList();\n  }, []);\n\n  return (\n    <List>\n      {genres &&\n        movies.map(\n          ({\n            id,\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            genre_ids,\n          }) => (\n            <MovieCard\n              key={id}\n              id={id}\n              poster={poster_path}\n              title={title}\n              date={release_date || '(ツ)'}\n              rating={vote_average}\n              genres={genres\n                .filter(genre => genre_ids.includes(genre.id))\n                .slice(0, 3)\n                .map(genre => genre.name)}\n            />\n          ),\n        )}\n    </List>\n  );\n}\n\nMovieCardList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default MovieCardList;\n","import styled from 'styled-components';\n\nexport const StyledPaginateContainer = styled.div`\n  .container {\n    display: flex;\n    justify-content: center;\n  }\n  .item {\n    width: 40px;\n    height: 40px;\n    margin-right: 8px;\n    transform: scale(1.1);\n  }\n  .activeItem {\n    background-color: #2196f3;\n    border-radius: 4px;\n    color: #fff;\n    font-weight: 600;\n  }\n  .previous {\n    width: 40px;\n    height: 40px;\n    transform: scale(1.1);\n    margin-right: 8px;\n  }\n  .next {\n    width: 40px;\n    height: 40px;\n    transform: scale(1.1);\n    margin-left: 8px;\n  }\n  .break-me {\n    width: 50px;\n    height: 50px;\n  }\n  .link {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    width: 100%;\n    height: 100%;\n    &:hover {\n      background-color: #2196f3;\n      border-radius: 4px;\n      color: #fff;\n    }\n  }\n  .previousLink {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      background-color: #2196f3;\n      border-radius: 4px;\n      color: #fff;\n    }\n  }\n  .nextLink {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      background-color: #2196f3;\n      border-radius: 4px;\n      color: #fff;\n    }\n  }\n  .breakLink {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai';\nimport { StyledPaginateContainer } from './Pagination.styled';\n\nexport default function Pagination({ pageCount, onClick }) {\n  return (\n    <StyledPaginateContainer>\n      <ReactPaginate\n        pageCount={pageCount}\n        onPageChange={onClick}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        containerClassName={'container'}\n        pageClassName={'item'}\n        activeClassName={'activeItem'}\n        pageLinkClassName={'link'}\n        previousClassName={'previous'}\n        previousLinkClassName={'previousLink'}\n        previousLabel={<AiOutlineArrowLeft />}\n        nextClassName={'next'}\n        nextLinkClassName={'nextLink'}\n        nextLabel={<AiOutlineArrowRight />}\n        breakClassName={'break-me'}\n        breakLabel={'...'}\n        breakLinkClassName={'breakLink'}\n      />\n    </StyledPaginateContainer>\n  );\n}\n\nPagination.propTypes = {\n  totalPages: PropTypes.number,\n  initialPage: PropTypes.number,\n  onClick: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'e46b87edbe0418b9678f5579382a8e13';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrandingMovies(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page || 1}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchSearchMovies(seacrhQuery, page) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${seacrhQuery}&page=${page}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchMovieInformation(movieId) {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchCastInformation(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function fetchGenresList() {\n  const url = `/genre/movie/list?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.genres;\n}\n"],"names":["SearchForm","styled","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","resetState","Box","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","Suspense","MoviesPage","movies","setMovies","totalPages","setTotalPages","navigate","useNavigate","location","useLocation","URLSearchParams","search","get","currentPage","Number","useEffect","fetchSearchMovies","data","console","log","results","total_pages","length","NotFoundPage","duration","getFetchMovies","window","scrollTo","top","behavior","query","MovieCardList","Pagination","pageCount","onClick","selected","List","MovieLink","Link","Card","Image","CardTitle","CardInfo","MovieCardInfo","Container","id","poster","title","date","rating","genres","to","pathname","state","from","src","defaultImage","alt","substring","setGenres","fetchGenresList","getFetchGenresList","map","poster_path","release_date","vote_average","genre_ids","filter","genre","includes","slice","StyledPaginateContainer","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","pageClassName","activeClassName","pageLinkClassName","previousClassName","previousLinkClassName","previousLabel","nextClassName","nextLinkClassName","nextLabel","breakClassName","breakLabel","breakLinkClassName","API_KEY","fetchTrandingMovies","page","url","axios","seacrhQuery","fetchMovieInformation","movieId","fetchCastInformation","cast","fetchReviews"],"sourceRoot":""}