{"version":3,"file":"static/js/home-page.c14bdf74.chunk.js","mappings":"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","sources":["Views/HomePage.jsx","components/MovieCardList/MovieCardList.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieCardList/MovieCardList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","services/apiService.js"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { fetchTrandingMovies } from '../services/apiService';\nimport MovieCardList from '../components/MovieCardList/MovieCardList';\nimport styled from 'styled-components';\nimport Pagination from '../components/Pagination/Pagination';\n\n const HomePage = () => {\n  const itemsPerPage = 20;\n  const [movies, setMovies] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n\n  const [totalPages, setTotalPages] = useState(null);\n  \n    useEffect(() => {\n  \n  async function getFetchMovies() {\n    try {\n      const data = await fetchTrandingMovies(pageCount);\n      console.log('data', data);\n      const {\n        results,\n        total_pages\n      } = data;\n      setTotalPages(total_pages);\n      setMovies(results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  getFetchMovies();\n  window.scrollTo({ top: 240, behavior: 'smooth' });\n}, [pageCount]);\n\nuseEffect(() => {}, [itemOffset, movies, itemsPerPage]);\n\n  const handlePageClick = ({ selected }) => {\n   console.log(selected);\n   setPageCount(selected + 1);\n    const newOffset = (selected * itemsPerPage) % movies.length;\n    setItemOffset(newOffset);\n\n  };\n\n  return (\n    <>\n     <Title>Trending Today</Title>\n      {movies && <MovieCardList movies={movies} />}\n      <Pagination pageCount={totalPages} onClick={handlePageClick} />\n    </>\n  );\n}\n\nexport default HomePage;\n\nconst Title = styled.h2`\n  margin: ${p => p.theme.space[4]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accent};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Card = styled.li`\n  border-radius: 2px;\n  /* display: flex; */\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    /* display: grid;\n    grid-template-columns: minmax(10px, 1fr) 3fr;\n    grid-gap: 25px; */\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1) translateY(-5px);\n    box-shadow: 0px 5px 14px 2px rgba(0, 0, 0, 0.55);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  object-fit: contain;\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    border-radius: 2px;\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  font-style: normal;\n  font-weight: 700;\n  color: #2a363b;\n  font-size: 14px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const MovieCardInfo = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  color: #2196f3;\n  margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n/* flex-direction: column; */\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AiFillStar } from 'react-icons/ai';\nimport {\n  Card,\n  Image,\n  CardTitle,\n  MovieLink,\n  CardInfo,\n  MovieCardInfo,\n  Container,\n} from './MovieCard.styled';\nimport defaultImage from '../Images/defaultMovie.png';\n\nfunction MovieCard({ id, poster, title, date, rating, genres }) {\n  const location = useLocation();\n\n  return (\n    <Container >\n    <Card>\n      <MovieLink\n      to={`/movies/${id}`}\n      state={{ from: location }}\n      >\n        <Image\n          src={\n            poster\n              ? `https://image.tmdb.org/t/p/original${poster}`\n              : defaultImage\n          }\n          alt={title}\n        />\n      </MovieLink>\n      <CardTitle>{title}</CardTitle>\n      <CardInfo>\n        <MovieCardInfo>{`${genres} | ${date.substring(0, 4)}`}</MovieCardInfo>\n        <MovieCardInfo>\n          <AiFillStar /> {rating}\n        </MovieCardInfo>\n      </CardInfo>\n    </Card>\n    </Container>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  rating: PropTypes.number,\n  genres: PropTypes.array,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchGenresList } from '../../services/apiService';\nimport { List } from './MovieCardList.styled';\nimport MovieCard from '../MovieCard/MovieCard';\n\nfunction MovieCardList({ movies }) {\n  const [genres, setGenres] = useState(null);\n\n  useEffect(() => {\n    async function getFetchGenresList() {\n      try {\n        const genres = await fetchGenresList();\n        setGenres(genres);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFetchGenresList();\n  }, []);\n\n  return (\n    <List>\n      {genres &&\n        movies.map(\n          ({\n            id,\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            genre_ids,\n          }) => (\n            <MovieCard\n              key={id}\n              id={id}\n              poster={poster_path}\n              title={title}\n              date={release_date || '(ãƒ„)'}\n              rating={vote_average}\n              genres={genres\n                .filter(genre => genre_ids.includes(genre.id))\n                .slice(0, 3)\n                .map(genre => genre.name)}\n            />\n          ),\n        )}\n    </List>\n  );\n}\n\nMovieCardList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default MovieCardList;\n","import styled from 'styled-components';\n\nexport const StyledPaginateContainer = styled.div`\n  .container {\n    display: flex;\n    justify-content: center;\n  }\n  .item {\n    width: 40px;\n    height: 40px;\n    margin-right: 8px;\n    transform: scale(1.1);\n  }\n  .activeItem {\n    background-color: #2196f3;\n    border-radius: 4px;\n    color: #fff;\n    font-weight: 600;\n  }\n  .previous {\n    width: 40px;\n    height: 40px;\n    transform: scale(1.1);\n    margin-right: 8px;\n  }\n  .next {\n    width: 40px;\n    height: 40px;\n    transform: scale(1.1);\n    margin-left: 8px;\n  }\n  .break-me {\n    width: 50px;\n    height: 50px;\n  }\n  .link {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    width: 100%;\n    height: 100%;\n    &:hover {\n      background-color: #2196f3;\n      border-radius: 4px;\n      color: #fff;\n    }\n  }\n  .previousLink {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      background-color: #2196f3;\n      border-radius: 4px;\n      color: #fff;\n    }\n  }\n  .nextLink {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      background-color: #2196f3;\n      border-radius: 4px;\n      color: #fff;\n    }\n  }\n  .breakLink {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai';\nimport { StyledPaginateContainer } from './Pagination.styled';\n\nexport default function Pagination({ pageCount, onClick }) {\n  return (\n    <StyledPaginateContainer>\n      <ReactPaginate\n        pageCount={pageCount}\n        onPageChange={onClick}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        containerClassName={'container'}\n        pageClassName={'item'}\n        activeClassName={'activeItem'}\n        pageLinkClassName={'link'}\n        previousClassName={'previous'}\n        previousLinkClassName={'previousLink'}\n        previousLabel={<AiOutlineArrowLeft />}\n        nextClassName={'next'}\n        nextLinkClassName={'nextLink'}\n        nextLabel={<AiOutlineArrowRight />}\n        breakClassName={'break-me'}\n        breakLabel={'...'}\n        breakLinkClassName={'breakLink'}\n      />\n    </StyledPaginateContainer>\n  );\n}\n\nPagination.propTypes = {\n  totalPages: PropTypes.number,\n  initialPage: PropTypes.number,\n  onClick: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'e46b87edbe0418b9678f5579382a8e13';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrandingMovies(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page || 1}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchSearchMovies(seacrhQuery, page) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${seacrhQuery}&page=${page}&language=en-US&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchMovieInformation(movieId) {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchCastInformation(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function fetchGenresList() {\n  const url = `/genre/movie/list?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n\n  return data.genres;\n}\n"],"names":["useState","movies","setMovies","pageCount","setPageCount","itemOffset","setItemOffset","totalPages","setTotalPages","useEffect","fetchTrandingMovies","data","console","log","results","total_pages","getFetchMovies","window","scrollTo","top","behavior","Title","onClick","selected","newOffset","length","styled","p","theme","space","colors","accent","fontSizes","m","fontWeights","bold","List","MovieLink","Link","Card","Image","CardTitle","CardInfo","MovieCardInfo","Container","id","poster","title","date","rating","genres","location","useLocation","to","state","from","src","defaultImage","alt","substring","setGenres","fetchGenresList","getFetchGenresList","map","poster_path","release_date","vote_average","genre_ids","filter","genre","includes","slice","name","StyledPaginateContainer","Pagination","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","pageClassName","activeClassName","pageLinkClassName","previousClassName","previousLinkClassName","previousLabel","nextClassName","nextLinkClassName","nextLabel","breakClassName","breakLabel","breakLinkClassName","API_KEY","page","url","axios","fetchSearchMovies","seacrhQuery","fetchMovieInformation","movieId","fetchCastInformation","cast","fetchReviews"],"sourceRoot":""}