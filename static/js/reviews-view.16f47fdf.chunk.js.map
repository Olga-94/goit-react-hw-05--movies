{"version":3,"file":"static/js/reviews-view.16f47fdf.chunk.js","mappings":"2SAEaA,EAAcC,EAAAA,GAAAA,GAAH,sBAEXC,EAAcD,EAAAA,GAAAA,GAAH,0HAOXE,EAAaF,EAAAA,GAAAA,EAAH,4JASVG,EAAgBH,EAAAA,GAAAA,EAAH,uE,SCgC1B,EAxCkB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAcC,EAAAA,EAAAA,MAAdD,UAYR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAaJ,GAFb,OAEjBK,EAFiB,OAGvBN,EAAWM,EAASC,KAAKC,SAHF,gDAKvBR,EAAW,IALY,yDAAH,qDAQxBI,MACC,CAACH,KAEF,UAAC,IAAD,YACE,SAACR,EAAD,UACGM,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACjB,EAAD,YACE,SAACC,EAAD,UAAae,KACb,SAACd,EAAD,UAAgBe,MAFAF,SAMtB,SAAC,EAAAG,SAAD,WACE,SAAC,KAAD,UC/BO,SAASC,IACtB,IAAQC,GAAYb,EAAAA,EAAAA,MAAZa,QACR,GAA8BjB,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAG,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE0BE,EAAAA,EAAAA,IAAaU,GAFvC,WAEUhB,EAFV,QAIiBiB,OAJjB,sBAKY,IAAIC,MAAM,oBALtB,OAQIjB,EAAWD,GARf,gDAUImB,EAAAA,GAAAA,MAAY,oBACZC,QAAQC,IAAR,MAXJ,0BAawBf,EAAAA,EAAAA,IAAaU,GAbrC,QAaQhB,EAbR,OAeEC,EAAWD,GACXsB,OAAOC,SAAS,CAAEC,IAAK,IAAKC,SAAU,WAhBxC,yDADc,yBAAC,WAAD,wBAmBdC,KACC,CAACV,KAEG,8BAAGhB,IAAW,SAAC,EAAD,CAASA,QAASA","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","Views/ReviewsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul``;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 25px;\n  display: flex;\n  margin-right: 5px;\n  border-bottom: 2px solid grey;\n`;\n\nexport const AuthorName = styled.p`\n  font-weight: bold;\n  margin-right: 10px;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.67;\n`;\n\nexport const AuthorContent = styled.p`\n  margin-bottom: 30px;\n  text-align: center;\n`;\n","import { useEffect, useState, Suspense } from 'react';\n// import PropTypes from 'prop-types';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/apiService';\nimport { Container } from '../App.styled';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  AuthorName,\n  AuthorContent,\n} from './Reviews.styled';\n\n  const Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n  const { detailsId } = useParams();\n  useEffect(() => {\n    const fetchMoviesReviews = async () => {\n      try {\n        const response = await fetchReviews(detailsId);\n        setReviews(response.data.results);\n      } catch (error) {\n        setReviews([]);\n      }\n    };\n    fetchMoviesReviews();\n  }, [detailsId]);\n  return (\n    <Container>\n      <ReviewsList>\n        {reviews.map(({ id, author, content }) => (\n          <ReviewsItem key={id}>\n            <AuthorName>{author}</AuthorName>\n            <AuthorContent>{content}</AuthorContent>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n\n// Reviews.propTypes = {\n//   reviews: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string,\n//       author: PropTypes.string,\n//       content: PropTypes.string,\n//     }),\n//   ),\n// };\nexport default Reviews;","import React, { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../services/apiService';\nimport Reviews from '../components/Reviews/Reviews';\n\nexport default function ReviewsView() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const reviews = await fetchReviews(movieId);\n\n        if (!reviews.length) {\n          throw new Error('No reviews found');\n        }\n\n        setReviews(reviews);\n      } catch (error) {\n        toast.error('No reviews found');\n        console.log(error);\n      }\n      const reviews = await fetchReviews(movieId);\n\n      setReviews(reviews);\n      window.scrollTo({ top: 650, behavior: 'smooth' });\n    }\n    getReviews();\n  }, [movieId]);\n\n  return <>{reviews && <Reviews reviews={reviews} />}</>;\n}\n"],"names":["ReviewsList","styled","ReviewsItem","AuthorName","AuthorContent","useState","reviews","setReviews","detailsId","useParams","useEffect","fetchMoviesReviews","fetchReviews","response","data","results","map","id","author","content","Suspense","ReviewsView","movieId","length","Error","toast","console","log","window","scrollTo","top","behavior","getReviews"],"sourceRoot":""}